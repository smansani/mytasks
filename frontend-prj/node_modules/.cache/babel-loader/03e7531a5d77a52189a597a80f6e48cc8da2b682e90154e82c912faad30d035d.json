{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive - gitam.in\\\\Desktop\\\\My files\\\\react\\\\project\\\\my_tasks\\\\src\\\\components\\\\TaskState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskContext from './taskcontext'; // Ensure TaskContext is correctly imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const taskInitial = [];\n  const [tasks, setTasks] = useState(taskInitial);\n\n  // Fetch all tasks\n  const getTasks = async () => {\n    const url = `${host}/api/notes/fetchnotes`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5MDFlMWExYmM5MTdkY2IyMDk1NDQ5In0sImlhdCI6MTcyMTU1MDAxNX0.5GVnB8uqOQdW5e9ZMx9gyjSqSHOSP6dSit-IiN9YX6s\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Response status: ${response.status}`);\n      }\n      const json = await response.json();\n      setTasks(json);\n    } catch (error) {\n      console.error('Failed to fetch tasks:', error.message);\n    }\n  };\n\n  // Add a new task\n  const addTask = async (title, description) => {\n    const url = `${host}/api/notes/createnotes`;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5MDFlMWExYmM5MTdkY2IyMDk1NDQ5In0sImlhdCI6MTcyMTU1MDAxNX0.5GVnB8uqOQdW5e9ZMx9gyjSqSHOSP6dSit-IiN9YX6s\"\n        },\n        body: JSON.stringify({\n          title,\n          description\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Response status: ${response.status}`);\n      }\n      const newTask = await response.json();\n      setTasks([...tasks, newTask]);\n    } catch (error) {\n      console.error('Failed to add task:', error.message);\n    }\n  };\n\n  // Update a task\n  const updateTask = async (id, title, description) => {\n    const url = `${host}/api/notes/updatenote/${id}`;\n    try {\n      const response = await fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5MDFlMWExYmM5MTdkY2IyMDk1NDQ5In0sImlhdCI6MTcyMTU1MDAxNX0.5GVnB8uqOQdW5e9ZMx9gyjSqSHOSP6dSit-IiN9YX6s\"\n        },\n        body: JSON.stringify({\n          title,\n          description\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Response status: ${response.status}`);\n      }\n      const updatedTask = await response.json();\n      setTasks(tasks.map(task => task._id === id ? updatedTask : task));\n    } catch (error) {\n      console.error('Failed to update task:', error.message);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async id => {\n    const url = `${host}/api/notes/deletenote/${id}`;\n    try {\n      const response = await fetch(url, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5MDFlMWExYmM5MTdkY2IyMDk1NDQ5In0sImlhdCI6MTcyMTU1MDAxNX0.5GVnB8uqOQdW5e9ZMx9gyjSqSHOSP6dSit-IiN9YX6s\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Response status: ${response.status}`);\n      }\n      setTasks(tasks.filter(task => task._id !== id));\n    } catch (error) {\n      console.error('Failed to delete task:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      setTasks,\n      addTask,\n      updateTask,\n      deleteTask,\n      getTasks\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskState, \"pzHNH3dnKBkfHlSkvK1B8hiH78g=\");\n_c = TaskState;\nexport default TaskState;\nvar _c;\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"names":["React","useState","TaskContext","jsxDEV","_jsxDEV","TaskState","props","_s","host","taskInitial","tasks","setTasks","getTasks","url","response","fetch","headers","ok","Error","status","json","error","console","message","addTask","title","description","method","body","JSON","stringify","newTask","updateTask","id","updatedTask","map","task","_id","deleteTask","filter","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive - gitam.in/Desktop/My files/react/project/my_tasks/src/components/TaskState.js"],"sourcesContent":["import React, { useState} from 'react';\r\nimport TaskContext from './taskcontext'; // Ensure TaskContext is correctly imported\r\n\r\nconst TaskState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n  const taskInitial = [];\r\n  const [tasks, setTasks] = useState(taskInitial);\r\n\r\n  // Fetch all tasks\r\n  const getTasks = async () => {\r\n    const url = `${host}/api/notes/fetchnotes`;\r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5MDFlMWExYmM5MTdkY2IyMDk1NDQ5In0sImlhdCI6MTcyMTU1MDAxNX0.5GVnB8uqOQdW5e9ZMx9gyjSqSHOSP6dSit-IiN9YX6s\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Response status: ${response.status}`);\r\n      }\r\n\r\n      const json = await response.json();\r\n      setTasks(json);\r\n    } catch (error) {\r\n      console.error('Failed to fetch tasks:', error.message);\r\n    }\r\n  };\r\n\r\n  // Add a new task\r\n  const addTask = async (title, description) => {\r\n    const url = `${host}/api/notes/createnotes`;\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5MDFlMWExYmM5MTdkY2IyMDk1NDQ5In0sImlhdCI6MTcyMTU1MDAxNX0.5GVnB8uqOQdW5e9ZMx9gyjSqSHOSP6dSit-IiN9YX6s\",\r\n        },\r\n        body: JSON.stringify({ title, description }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Response status: ${response.status}`);\r\n      }\r\n\r\n      const newTask = await response.json();\r\n      setTasks([...tasks, newTask]);\r\n    } catch (error) {\r\n      console.error('Failed to add task:', error.message);\r\n    }\r\n  };\r\n\r\n  // Update a task\r\n  const updateTask = async (id, title, description) => {\r\n     const url = `${host}/api/notes/updatenote/${id}`;\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5MDFlMWExYmM5MTdkY2IyMDk1NDQ5In0sImlhdCI6MTcyMTU1MDAxNX0.5GVnB8uqOQdW5e9ZMx9gyjSqSHOSP6dSit-IiN9YX6s\",\r\n        },\r\n        body: JSON.stringify({ title, description }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Response status: ${response.status}`);\r\n      }\r\n\r\n      const updatedTask = await response.json();\r\n      setTasks(tasks.map((task) => (task._id === id ? updatedTask : task)));\r\n    } catch (error) {\r\n      console.error('Failed to update task:', error.message);\r\n    }\r\n  };\r\n\r\n  // Delete a task\r\n  const deleteTask = async (id) => {\r\n    const url = `${host}/api/notes/deletenote/${id}`;\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5MDFlMWExYmM5MTdkY2IyMDk1NDQ5In0sImlhdCI6MTcyMTU1MDAxNX0.5GVnB8uqOQdW5e9ZMx9gyjSqSHOSP6dSit-IiN9YX6s\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Response status: ${response.status}`);\r\n      }\r\n\r\n      setTasks(tasks.filter((task) => task._id !== id));\r\n    } catch (error) {\r\n      console.error('Failed to delete task:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider value={{ tasks, setTasks, addTask, updateTask, deleteTask, getTasks }}>\r\n      {props.children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}